"""Add stripe cols to order

Revision ID: 6b595fb76cca
Revises: 4ba1c09f9700
Create Date: 2025-01-04 00:39:19.962904

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b595fb76cca'
down_revision = '4ba1c09f9700'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orderaddresslink')
    op.drop_column('address', 'address_type')
    op.add_column('order', sa.Column('stripe_checkout_session', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('order', sa.Column('stripe_payment_intent', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('order', sa.Column('stale_at', sa.Integer(), nullable=True))
    op.alter_column('order', 'payment_method',
               existing_type=postgresql.ENUM('STRIPE', 'PAYPAL', name='paymentmethod'),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.add_column('product', sa.Column('stripe_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    with op.get_context().autocommit_block():
        op.execute("ALTER TYPE orderstatus ADD VALUE 'STALE'")
        op.execute("DROP TYPE paymentmethod")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('product', 'stripe_id')
    op.alter_column('order', 'payment_method',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=postgresql.ENUM('STRIPE', 'PAYPAL', name='paymentmethod'),
               existing_nullable=True)
    op.drop_column('order', 'stale_at')
    op.drop_column('order', 'stripe_payment_intent')
    op.drop_column('order', 'stripe_checkout_session')
    op.add_column('address', sa.Column('address_type', postgresql.ENUM('BILLING', 'SHIPPING', name='addresstype'), autoincrement=False, nullable=False))
    op.create_table('orderaddresslink',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('address_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], name='orderaddresslink_address_id_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], name='orderaddresslink_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'order_id', 'address_id', name='orderaddresslink_pkey')
    )
    # ### end Alembic commands ###
