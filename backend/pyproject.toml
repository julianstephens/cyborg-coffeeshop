[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.12,<4.0"
dependencies = [
  "fastapi[standard]<1.0.0,>=0.114.2",
  "python-multipart<1.0.0,>=0.0.7",
  "email-validator<3.0.0.0,>=2.1.0.post1",
  "passlib[bcrypt]<2.0.0,>=1.7.4",
  "tenacity<9.0.0,>=8.2.3",
  "pydantic>2.0",
  "emails<1.0,>=0.6",
  "jinja2<4.0.0,>=3.1.4",
  "alembic<2.0.0,>=1.12.1",
  "httpx<1.0.0,>=0.25.1",
  "psycopg[binary]<4.0.0,>=3.1.13",
  "sqlmodel<1.0.0,>=0.0.21",
  # Pin bcrypt until passlib supports the latest
  "bcrypt==4.0.1",
  "pydantic-settings<3.0.0,>=2.2.1",
  "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
  "pyjwt<3.0.0,>=2.8.0",
  "pydantic-extra-types>=2.10.1",
  "pycountry>=24.6.1",
  "stripe>=11.4.1",
  "loguru>=0.7.3",
  "boto3>=1.35.92",
]

[tool.uv]
dev-dependencies = [
  "pytest<8.0.0,>=7.4.3",
  "mypy<2.0.0,>=1.8.0",
  "ruff<1.0.0,>=0.2.2",
  "pre-commit<4.0.0,>=3.6.2",
  "types-passlib<2.0.0.0,>=1.7.7.20240106",
  "coverage<8.0.0,>=7.4.3",
  "faker>=33.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "B",   # flake8-bugbear
  "N",   # pep8-naming
  "LOG", # flake8-logging
  "G",   # flake8-logging-format
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "TRY", # tryceratops
  "RUF", # ruff
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
